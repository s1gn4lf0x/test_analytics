# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2017-09-05 20:11
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import fernet_fields.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChartConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field', models.CharField(max_length=128)),
                ('dashboard', models.CharField(max_length=128)),
                ('config', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256)),
                ('url', models.URLField(blank=True)),
                ('api_id', models.UUIDField(default=uuid.uuid4)),
                ('api_urls', django.contrib.postgres.fields.ArrayField(base_field=models.URLField(), blank=True, null=True, size=None)),
                ('admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DashboardConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(max_length=128)),
                ('dashboard', models.CharField(max_length=128)),
                ('config', django.contrib.postgres.fields.jsonb.JSONField()),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dashconfigs', to='shsql.Company')),
            ],
        ),
        migrations.CreateModel(
            name='FacebookAdAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_id', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=200)),
                ('platform', models.CharField(choices=[('ios', 'iOS'), ('android', 'Android'), ('web', 'Web Site'), ('canvas', 'Canvas App')], max_length=32)),
                ('daily_budget', models.DecimalField(decimal_places=2, max_digits=12)),
                ('is_active', models.BooleanField(default=False)),
                ('validation', models.CharField(blank=True, max_length=500)),
                ('objective', models.CharField(default='LINK_CLICKS', max_length=100)),
                ('is_reporting_only', models.BooleanField(default=True)),
                ('is_auto', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='FacebookAdSetConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(max_length=128)),
                ('objective', models.CharField(max_length=128)),
                ('optimization_goal', models.CharField(max_length=128)),
                ('billing_event', models.CharField(max_length=128)),
                ('geo', models.CharField(max_length=128)),
                ('bid_amount', models.DecimalField(decimal_places=2, max_digits=7)),
                ('optional_config', django.contrib.postgres.fields.jsonb.JSONField()),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shsql.Company')),
            ],
        ),
        migrations.CreateModel(
            name='FacebookApp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_id', models.CharField(max_length=100, unique=True)),
                ('app_secret', fernet_fields.fields.EncryptedCharField(max_length=100)),
                ('access_token', fernet_fields.fields.EncryptedCharField(max_length=256)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('business_id', models.CharField(blank=True, max_length=100)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shsql.Company')),
            ],
        ),
        migrations.CreateModel(
            name='FacebookDashboardReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_date', models.DateTimeField()),
                ('data', django.contrib.postgres.fields.jsonb.JSONField()),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fbreports', to='shsql.FacebookAdAccount')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fbreports', to='shsql.Company')),
            ],
        ),
        migrations.CreateModel(
            name='FacebookImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_hash', models.CharField(max_length=256)),
                ('permalink_url', models.URLField(max_length=256)),
                ('created_time', models.DateTimeField()),
                ('accounts', models.ManyToManyField(related_name='fb_images', to='shsql.FacebookAdAccount')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shsql.Company')),
            ],
        ),
        migrations.CreateModel(
            name='FacebookImageCreative',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('image_hash', models.CharField(max_length=256)),
                ('name', models.CharField(max_length=256)),
                ('title', models.CharField(max_length=256)),
                ('body', models.CharField(max_length=512)),
                ('url', models.URLField(max_length=256)),
                ('active', models.BooleanField(default=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shsql.Company')),
            ],
        ),
        migrations.CreateModel(
            name='FacebookRawReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_date', models.DateTimeField()),
                ('data', django.contrib.postgres.fields.jsonb.JSONField()),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fbrawreports', to='shsql.FacebookAdAccount')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fbrawreports', to='shsql.Company')),
            ],
        ),
        migrations.CreateModel(
            name='FacebookReportConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(max_length=128)),
                ('level', models.CharField(max_length=128)),
                ('breakdown', models.CharField(blank=True, max_length=128)),
                ('period', models.PositiveSmallIntegerField(default=1)),
                ('config', django.contrib.postgres.fields.jsonb.JSONField()),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shsql.Company')),
            ],
        ),
        migrations.CreateModel(
            name='KPIBinnedDashboardReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_date', models.DateTimeField()),
                ('data', django.contrib.postgres.fields.jsonb.JSONField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kpibinreports', to='shsql.Company')),
            ],
        ),
        migrations.CreateModel(
            name='KPIDashboardReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_date', models.DateTimeField()),
                ('period', models.PositiveSmallIntegerField(default=1)),
                ('data', django.contrib.postgres.fields.jsonb.JSONField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kpidashreports', to='shsql.Company')),
            ],
        ),
        migrations.CreateModel(
            name='KPIReportConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('config', django.contrib.postgres.fields.jsonb.JSONField()),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='kpiconfigs', to='shsql.Company')),
            ],
        ),
        migrations.CreateModel(
            name='TableConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('dashboard', models.CharField(max_length=128)),
                ('config', django.contrib.postgres.fields.jsonb.JSONField()),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tableconfigs', to='shsql.Company')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shsql.Company')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='kpibinneddashboardreport',
            name='config',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='kpibinreports', to='shsql.KPIReportConfig'),
        ),
        migrations.AddField(
            model_name='facebookrawreport',
            name='config',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='fbrawreports', to='shsql.FacebookReportConfig'),
        ),
        migrations.AddField(
            model_name='facebookdashboardreport',
            name='raw_report',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='fbreports', to='shsql.FacebookRawReport'),
        ),
        migrations.AddField(
            model_name='facebookadaccount',
            name='app',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to='shsql.FacebookApp'),
        ),
        migrations.AddField(
            model_name='chartconfig',
            name='company',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chartconfigs', to='shsql.Company'),
        ),
        migrations.AlterUniqueTogether(
            name='tableconfig',
            unique_together=set([('company', 'name', 'dashboard')]),
        ),
        migrations.AlterUniqueTogether(
            name='kpireportconfig',
            unique_together=set([('name', 'company')]),
        ),
        migrations.AlterUniqueTogether(
            name='kpidashboardreport',
            unique_together=set([('company', 'report_date', 'period')]),
        ),
        migrations.AlterUniqueTogether(
            name='kpibinneddashboardreport',
            unique_together=set([('company', 'config', 'report_date')]),
        ),
        migrations.AlterUniqueTogether(
            name='facebookreportconfig',
            unique_together=set([('platform', 'level', 'breakdown', 'period', 'company')]),
        ),
        migrations.AlterUniqueTogether(
            name='facebookrawreport',
            unique_together=set([('company', 'account', 'report_date', 'config')]),
        ),
        migrations.AlterUniqueTogether(
            name='facebookimagecreative',
            unique_together=set([('company', 'date_created', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='facebookimage',
            unique_together=set([('company', 'image_hash')]),
        ),
        migrations.AlterUniqueTogether(
            name='facebookdashboardreport',
            unique_together=set([('company', 'account', 'report_date', 'raw_report')]),
        ),
        migrations.AlterUniqueTogether(
            name='facebookadsetconfig',
            unique_together=set([('company', 'platform', 'objective', 'geo')]),
        ),
        migrations.AlterUniqueTogether(
            name='facebookadaccount',
            unique_together=set([('account_id', 'app')]),
        ),
        migrations.AlterUniqueTogether(
            name='dashboardconfig',
            unique_together=set([('company', 'platform', 'dashboard')]),
        ),
        migrations.AlterUniqueTogether(
            name='chartconfig',
            unique_together=set([('company', 'field', 'dashboard')]),
        ),
    ]
